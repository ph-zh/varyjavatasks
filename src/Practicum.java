/*
ü¶â –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–¥ –∏ –∏–∑—É—á–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É.
 */

class Rodent {
    public void crunch() {
        System.out.println("–ì—Ä—ã–∑—É–Ω –≥—Ä—ã–∑—ë—Ç —á—Ç–æ —É–≥–æ–¥–Ω–æ.");
    }

    public void sleep() {
        System.out.println("–ì—Ä—ã–∑—É–Ω —É—Å–Ω—É–ª.");
    }
}

class Capybara extends Rodent {

    @Override
    public void crunch() {
        System.out.println("–ö–∞–ø–∏–±–∞—Ä–∞ –ª—é–±–∏—Ç –≥—Ä—ã–∑—Ç—å –∫—É–∫—É—Ä—É–∑—É.");
    }

    @Override
    public void sleep() {
        System.out.println("–ö–∞–ø–∏–±–∞—Ä–∞ –∫—Ä–µ–ø–∫–æ —Å–ø–∏—Ç.");
    }

    public void dive() {
        System.out.println("–ö–∞–ø–∏–±–∞—Ä–∞ —É–º–µ–µ—Ç –Ω—ã—Ä—è—Ç—å.");
    }
}

public class Practicum {

    public static void main(String[] args) {
        Rodent capybara = new Capybara();
        capybara.crunch();
        capybara.sleep();
    }

}